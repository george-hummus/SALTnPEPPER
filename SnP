#!/bin/bash
echo "" #gap between log entries
date -u #prints the date out for the log
homedir=$(pwd) #the home directory to return to once module is finished

#yesterday's date in utc
yesterday=$(date -u --date="yesterday" +'%Y%m%d')
ydDIR="zARCHIVE/${yesterday}"

#check if pipeline has already run
if [ -d  ${ydDIR} ]
then
  #if has then in test mode
  echo "Test Mode"
else
  #if not then in normal mode so move yesterday's outputs to the archive
  mkdir zARCHIVE/${yesterday} #makes folder for yesterday's outputs in archive
  mv xOUTPUTS/* zARCHIVE/${yesterday} #moves outputs to the folder
  mv zARCHIVE/${yesterday}/tns_public_objects.csv xOUTPUTS
  mv zARCHIVE/${yesterday}/obs_requests.json xOUTPUTS
  mv zARCHIVE/${yesterday}/observations.csv xOUTPUTS #move these back as they are always updated
  cp zARCHIVE/${yesterday}/requests_${yesterday}.json xOUTPUTS #copy previous requests back as need them in obs_check

  rm ${homedir}/RITA/fail.txt #remove file indicating that LT connection failed (if exists)
fi

### BILLY ###
cd ${homedir}/BILLY
python tns_update.py #run python script to update the local TNS database
cd ${homedir}

### LUCY ###
cd ${homedir}/LUCY
python pscores.py #make the new priorty score lists
cd ${homedir}

### MR. KITE ###
cd ${homedir}/MR_KITE
python email_alert.py #send the email alert
cd ${homedir}

### RITA ###
cd ${homedir}/RITA
python followup.py #request observations from LT
python obs_check.py #check is targets requested were observed
cd ${homedir}

### MR. KITE 2 ###
cd ${homedir}/MR_KITE
python obs_alert.py #send the observations alert email
cd ${homedir}

### SGT. P ###
cd ${homedir}/SGT_P
python auto_dload.py #downloads new obs data from LT archive
